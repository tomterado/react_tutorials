{"ast":null,"code":"import _slicedToArray from \"/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this2 = this;\n\n      return React.createElement(Square, {\n        value: this.state.squares[i],\n        onClick: function onClick() {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var winner = calculateWinner(this.state.squares);\n      var status;\n\n      if (winner) {\n        status = \"Winner: \" + winner;\n      } else {\n        status = \"Next Player: \" + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tterado/Desktop/projects/react_tutorials/ticktactoe/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","state","squares","Array","fill","xIsNext","i","slice","calculateWinner","setState","handleClick","winner","status","renderSquare","Component","Game","lines","length","a","b","c","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n  function Square(props){\n    return (\n      <button className=\"square\" \n        onClick={props.onClick}>\n        {props.value}\n      </button>\n    )\n  }\n  \n  class Board extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        squares: Array(9).fill(null),\n        xIsNext: true,\n      }\n    }\n\n    handleClick(i){\n      const squares = this.state.squares.slice();\n      if (calculateWinner(squares) || squares[i]){\n        return\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O'\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext,\n      })\n    }\n\n    renderSquare(i) {\n      return (\n        <Square \n          value={this.state.squares[i]}\n          onClick = {() => this.handleClick(i)}\n      />);\n    }\n  \n    render() {\n      const winner = calculateWinner(this.state.squares)\n      let status;\n      if (winner){\n        status = \"Winner: \" + winner;\n      } else {\n        status = \"Next Player: \" + (this.state.xIsNext? 'X' : 'O');\n      }\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  \n"]},"metadata":{},"sourceType":"module"}